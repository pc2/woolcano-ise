
#include <stdio.h>
#include <memory.h>
#include "aes.h"

#define VERIFY

unsigned char key[] = {
    0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08,
    0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08
};

unsigned char input[] = {
    0x67, 0xc6, 0x69, 0x73, 0x51, 0xff, 0x4a, 0xec,
    0x29, 0xcd, 0xba, 0xab, 0xf2, 0xfb, 0xe3, 0x46,
    0x7c, 0xc2, 0x54, 0xf8, 0x1b, 0xe8, 0xe7, 0x8d,
    0x76, 0x5a, 0x2e, 0x63, 0x33, 0x9f, 0xc9, 0x9a,
    0x66, 0x32, 0xd, 0xb7, 0x31, 0x58, 0xa3, 0x5a,
    0x25, 0x5d, 0x5, 0x17, 0x58, 0xe9, 0x5e, 0xd4
};

#ifdef VERIFY
unsigned char encrypted[] = {
    0x89, 0x8a, 0x20, 0xfa, 0x4b, 0xc9, 0x94, 0xaf,
    0xbc, 0xa2, 0xea, 0xcf, 0x1d, 0xb7, 0x3b, 0xdf,
    0xb4, 0x5, 0xde, 0xd6, 0xb5, 0x7, 0x5a, 0x6b,
    0x61, 0x84, 0xdf, 0x49, 0x77, 0x80, 0xcb, 0xaf,
    0xfb, 0x3a, 0xe8, 0xf6, 0xbb, 0x0, 0xfd, 0x6d,
    0x6f, 0x40, 0x55, 0xd3, 0x61, 0x10, 0x8f, 0x6e
};
#endif

int main(int argc, char *argv[])
{
    aes_encrypt_ctx cx;
    aes_encrypt_key128(key, &cx);
    unsigned char output[sizeof(input)];
    for (unsigned int i = 0; i < sizeof(input); i += 16)
        aes_encrypt(&input[i], &output[i], &cx);
#ifdef VERIFY
    if (memcmp(encrypted, output, sizeof(output)) != 0)
        printf("verification failed!\n");
#endif
    return 0;
}
